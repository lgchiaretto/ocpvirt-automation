apiVersion: 'kubevirt.io/v1'
kind: 'VirtualMachine'
metadata:
  labels:
    app: '{{ app_name }}'
  name: '{{ vm_name }}'
  namespace: '{{ vm_project }}'
spec:
  dataVolumeTemplates:
    - apiVersion: 'cdi.kubevirt.io/v1beta1'
      kind: 'DataVolume'
      metadata:
        creationTimestamp: null
        name: '{{ vm_name }}'
      spec:
        sourceRef:
          kind: 'DataSource'
          name: '{{ template_name }}'
          namespace: 'openshift-virtualization-os-images'
        storage:
          resources:
            requests:
              storage: '{{ vm_disk_size }}Gi'
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/domain: '{{ vm_name }}'
        app: '{{ app_name }}'
    spec:
      architecture: 'amd64'
      domain:
        cpu:
          cores: {{ vm_cpu_cores }}
          sockets: {{ vm_cpu_sockets }}
          threads: 1
        devices:
          disks:
            - disk:
                bus: 'virtio'
              name: 'rootdisk'
            - disk:
                bus: 'virtio'
              name: 'cloudinitdisk'
          interfaces:
            - masquerade: {}
              model: 'virtio'
              name: 'default'
          rng: {}
        memory:
          guest: '{{ vm_memory }}Gi'
        resources: {}
      networks:
        - name: 'default'
          pod: {}
      terminationGracePeriodSeconds: 180
      readinessProbe:
        httpGet:
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 10
      volumes:
        - dataVolume:
            name: '{{ vm_name }}'
          name: 'rootdisk'
        - cloudInitNoCloud:
            userData: |
              #cloud-config
              user: '{{ vm_username }}'
              password: '{{ vm_password }}'
              chpasswd: { expire: False }
              ssh_pwauth: True
              ssh_authorized_keys:
                - {{ ssh_rsa }}
              packages:
                - python3
                - git
              runcmd:
                - mkdir -p /usr/src/app
                - git clone https://github.com/lgchiaretto/demo-print-hostname.git /usr/src/app
                - cp /usr/src/app/webserver.service /etc/systemd/system/
                - systemctl daemon-reload
                - systemctl enable webserver.service
                - systemctl start webserver.service
              final_message: "The Python web server is set up and running"
          name: 'cloudinitdisk'
